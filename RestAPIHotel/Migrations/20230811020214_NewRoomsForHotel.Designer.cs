// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestAPIHotel.Data;

#nullable disable

namespace RestAPIHotel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230811020214_NewRoomsForHotel")]
    partial class NewRoomsForHotel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestAPIHotel.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "personal hygiene products",
                            Area = 550,
                            CreatedDate = new DateTime(2023, 8, 10, 20, 2, 14, 365, DateTimeKind.Local).AddTicks(9245),
                            Details = "A very big room and a jacuzzi",
                            ImageUrl = "https://imagenes.forociudad.com/fotos/203185-casa-fea.jpg",
                            Name = "Luxory suite",
                            Occupancy = 5,
                            Rate = 200.0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "Not valid for now"
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "personal hygiene products",
                            Area = 500,
                            CreatedDate = new DateTime(2023, 8, 10, 20, 2, 14, 365, DateTimeKind.Local).AddTicks(9258),
                            Details = "A very not so big room and a small jacuzzi",
                            ImageUrl = "https://st.depositphotos.com/71898554/60977/i/450/depositphotos_609775626-stock-photo-a-lot-of-garbage-in.jpg",
                            Name = "Not so Luxory suite",
                            Occupancy = 5,
                            Rate = 180.0,
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "Not valid for now"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
